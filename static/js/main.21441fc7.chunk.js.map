{"version":3,"sources":["Components/RangeSlider.js","Components/Toggler.js","Components/Display.js","constants.js","Components/Drum.js","Components/Drums.js","App.js","reportWebVitals.js","index.js"],"names":["RangeSlider","inputProps","className","type","min","max","step","id","name","Toggler","title","options","value","otherInputProps","aria-label","role","htmlFor","checked","aria-hidden","Display","props","bankOne","keyCode","keyTrigger","url","bankTwo","Drum","isPowered","updateDisplay","volumeLevel","thisRef","React","useRef","useEffect","current","volume","playSound","useCallback","thisAudioEl","currentTime","play","replace","handleKeyDown","e","highLightActiveDrum","parentNode","document","addEventListener","removeEventListener","target","classList","add","setTimeout","remove","onClick","clickedButton","src","ref","Drums","drums","bank","selected","map","item","key","App","useState","displayVal","setDisplayVal","power","setPower","setBank","setVolumeLevel","onChange","Math","round","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.21441fc7.chunk.js","sourcesContent":["const RangeSlider = (inputProps) => {\n  return (\n    <div className=\"range-slider\">\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"1\"\n        step=\".01\"\n        id={`${inputProps.name}__slider`}\n        {...inputProps}\n      />\n    </div>\n  );\n};\nexport default RangeSlider;\n","const Toggler = ({ name, title, options, value, ...otherInputProps }) => {\n  return (\n    <fieldset aria-label={`${name} switcher`} role=\"radiogroup\">\n      {title && <legend>{title}</legend>}\n      <div className=\"c-toggle\">\n        <label htmlFor={`${name}__option1`}>{options[0]}</label>\n        <span className=\"c-toggle__wrapper\">\n          <input\n            type=\"radio\"\n            name={name || \"PleaseChooseName\"}\n            id={`${name}__option1`}\n            checked={value === options[0]}\n            {...otherInputProps}\n          />\n          <input\n            type=\"radio\"\n            name={name || \"PleaseChooseName\"}\n            id={`${name}__option2`}\n            checked={value === options[1]}\n            {...otherInputProps}\n          />\n          <span aria-hidden=\"true\" className=\"c-toggle__background\"></span>\n          <span aria-hidden=\"true\" className=\"c-toggle__switcher\"></span>\n        </span>\n        <label htmlFor={`${name}__option2`}>{options[1]}</label>\n      </div>\n    </fieldset>\n  );\n};\n\nexport default Toggler;\n","const Display = (props) => {\n  return (\n    <div id=\"display\" className=\"display\">\n      {props.value}\n    </div>\n  );\n};\nexport default Display;\n","const bankOne = [\n  {\n    keyCode: 81,\n    keyTrigger: \"Q\",\n    id: \"Heater-1\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\",\n  },\n  {\n    keyCode: 87,\n    keyTrigger: \"W\",\n    id: \"Heater-2\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\",\n  },\n  {\n    keyCode: 69,\n    keyTrigger: \"E\",\n    id: \"Heater-3\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\",\n  },\n  {\n    keyCode: 65,\n    keyTrigger: \"A\",\n    id: \"Heater-4\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\",\n  },\n  {\n    keyCode: 83,\n    keyTrigger: \"S\",\n    id: \"Clap\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\",\n  },\n  {\n    keyCode: 68,\n    keyTrigger: \"D\",\n    id: \"Open-HH\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\",\n  },\n  {\n    keyCode: 90,\n    keyTrigger: \"Z\",\n    id: \"Kick-n'-Hat\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\",\n  },\n  {\n    keyCode: 88,\n    keyTrigger: \"X\",\n    id: \"Kick\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\",\n  },\n  {\n    keyCode: 67,\n    keyTrigger: \"C\",\n    id: \"Closed-HH\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\",\n  },\n];\n\nconst bankTwo = [\n  {\n    keyCode: 81,\n    keyTrigger: \"Q\",\n    id: \"Chord-1\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\",\n  },\n  {\n    keyCode: 87,\n    keyTrigger: \"W\",\n    id: \"Chord-2\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\",\n  },\n  {\n    keyCode: 69,\n    keyTrigger: \"E\",\n    id: \"Chord-3\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\",\n  },\n  {\n    keyCode: 65,\n    keyTrigger: \"A\",\n    id: \"Shaker\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\",\n  },\n  {\n    keyCode: 83,\n    keyTrigger: \"S\",\n    id: \"Open-HH\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\",\n  },\n  {\n    keyCode: 68,\n    keyTrigger: \"D\",\n    id: \"Closed-HH\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\",\n  },\n  {\n    keyCode: 90,\n    keyTrigger: \"Z\",\n    id: \"Punchy-Kick\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\",\n  },\n  {\n    keyCode: 88,\n    keyTrigger: \"X\",\n    id: \"Side-Stick\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\",\n  },\n  {\n    keyCode: 67,\n    keyTrigger: \"C\",\n    id: \"Snare\",\n    url: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\",\n  },\n];\n\nexport { bankOne, bankTwo };\n","import React from \"react\";\n\nconst Drum = ({\n  isPowered,\n  keyTrigger,\n  keyCode,\n  url,\n  id,\n  updateDisplay,\n  volumeLevel,\n}) => {\n  const thisRef = React.useRef();\n\n  // update volume level if props.volumeLevel changes\n  React.useEffect(() => {\n    if (thisRef.current) {\n      thisRef.current.volume = volumeLevel;\n    }\n  }, [volumeLevel]);\n\n  // I have to pass playSounc as dependency to handleKeyDown useEffect\n  // playSound will get newly created if updateDisplay,thisRef,id changes\n  const playSound = React.useCallback(() => {\n    if (thisRef.current) {\n      let thisAudioEl = thisRef.current;\n      thisAudioEl.currentTime = 0;\n      thisAudioEl.play();\n      updateDisplay(id.replace(/-/g, \" \"));\n    }\n  }, [thisRef, id, updateDisplay]);\n\n  React.useEffect(() => {\n    // do below only if it's dependencies changes\n    const handleKeyDown = (e) => {\n      if (isPowered) {\n        if (e.keyCode === keyCode) {\n          playSound();\n          highLightActiveDrum(thisRef.current.parentNode);\n        }\n      }\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [isPowered]);\n\n  const highLightActiveDrum = (target) => {\n    target.classList.add(\"active\");\n    setTimeout(() => {\n      target.classList.remove(\"active\");\n    }, 200);\n  };\n  const handleClick = (e) => {\n    if (isPowered) {\n      let clickedButton = e.target;\n      playSound();\n      highLightActiveDrum(clickedButton);\n    }\n  };\n  return (\n    <button type=\"button\" className=\"drum-pad\" id={id} onClick={handleClick}>\n      <audio className=\"clip\" id={keyTrigger} src={url} ref={thisRef}></audio>\n      {keyTrigger}\n    </button>\n  );\n};\n\nexport default Drum;\n","import { bankOne, bankTwo } from \"../constants\";\nimport Drum from \"./Drum\";\n\nconst Drums = (props) => {\n  let drums = null;\n  if (props.bank.selected === \"One\") {\n    drums = bankOne.map((item) => {\n      return (\n        <Drum\n          isPowered={props.isPowered}\n          updateDisplay={props.updateDisplay}\n          {...item}\n          volumeLevel={props.volumeLevel}\n          key={item.keyCode}\n        />\n      );\n    });\n  } else {\n    drums = bankTwo.map((item) => {\n      return (\n        <Drum\n          isPowered={props.isPowered}\n          updateDisplay={props.updateDisplay}\n          {...item}\n          volumeLevel={props.volumeLevel}\n          key={item.keyCode}\n        />\n      );\n    });\n  }\n  return <div className=\"drum-pads\">{drums}</div>;\n};\n\nexport default Drums;\n","import React from \"react\";\nimport \"./App.scss\";\nimport RangeSlider from \"./Components/RangeSlider\";\nimport Toggler from \"./Components/Toggler\";\nimport Display from \"./Components/Display\";\nimport Drums from \"./Components/Drums\";\n\nconst App = () => {\n  const [displayVal, setDisplayVal] = React.useState(\"Play\");\n  const updateDisplay = (value) => {\n    setDisplayVal(value);\n  };\n\n  const [power, setPower] = React.useState({ selected: \"On\" });\n  const isPowered = power.selected === \"On\";\n  const powerControl = () => {\n    if (power.selected === \"On\") {\n      updateDisplay(\"\");\n      setPower({ selected: \"Off\" });\n    } else {\n      setPower({ selected: \"On\" });\n    }\n  };\n\n  const [bank, setBank] = React.useState({ selected: \"One\" });\n  const handleBankChange = () => {\n    if (bank.selected === \"One\") {\n      setBank({ selected: \"Two\" });\n      updateDisplay(\"Smooth Piano Kit\");\n    } else {\n      setBank({ selected: \"One\" });\n      updateDisplay(\"Heater Kit\");\n    }\n  };\n  const [volumeLevel, setVolumeLevel] = React.useState(0.5);\n  const handleVolumeChange = (e) => {\n    let value = e.target.value;\n    setVolumeLevel(value);\n    updateDisplay(`Volume: ${Math.round(value * 100)}`);\n\n    setTimeout(() => {\n      updateDisplay(\"\");\n    }, 1000);\n  };\n  const bankOptions = [\"One\", \"Two\"];\n  const powerOptions = [\"Off\", \"On\"];\n\n  return (\n    <div id=\"drum-machine\" className=\"drum-machine\">\n      <div className=\"drums\">\n        <Drums\n          updateDisplay={updateDisplay}\n          bank={bank}\n          isPowered={isPowered}\n          volumeLevel={volumeLevel}\n        />\n      </div>\n      <div className=\"drum-controls\">\n        <Toggler\n          name=\"power\"\n          title=\"Power\"\n          options={powerOptions}\n          value={power.selected}\n          onChange={powerControl}\n        />\n        <Display value={displayVal} />\n        <RangeSlider\n          name=\"volume\"\n          title=\"Volume\"\n          value={volumeLevel}\n          onChange={handleVolumeChange}\n          disabled={!isPowered}\n        />\n        <Toggler\n          options={bankOptions}\n          value={bank.selected}\n          name=\"bank\"\n          title=\"Bank\"\n          onChange={handleBankChange}\n          disabled={!isPowered}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}